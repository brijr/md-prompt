{"version":3,"sources":["../src/auto-setup.ts"],"sourcesContent":["import { existsSync, readFileSync, writeFileSync } from \"fs\";\nimport { join } from \"path\";\n\ninterface ProjectInfo {\n  bundler: \"vite\" | \"next\" | \"webpack\" | \"rollup\" | \"astro\" | \"sveltekit\" | \"none\";\n  hasTypeScript: boolean;\n  projectRoot: string;\n}\n\nexport function detectProject(cwd: string = process.cwd()): ProjectInfo {\n  const packageJsonPath = join(cwd, \"package.json\");\n  const hasPackageJson = existsSync(packageJsonPath);\n\n  let bundler: ProjectInfo[\"bundler\"] = \"none\";\n\n  if (hasPackageJson) {\n    const packageJson = JSON.parse(readFileSync(packageJsonPath, \"utf-8\"));\n    const deps = {\n      ...packageJson.dependencies,\n      ...packageJson.devDependencies,\n    };\n\n    if (\n      deps.next ||\n      existsSync(join(cwd, \"next.config.js\")) ||\n      existsSync(join(cwd, \"next.config.mjs\"))\n    ) {\n      bundler = \"next\";\n    } else if (\n      deps.astro ||\n      existsSync(join(cwd, \"astro.config.mjs\")) ||\n      existsSync(join(cwd, \"astro.config.ts\"))\n    ) {\n      bundler = \"astro\";\n    } else if (\n      deps[\"@sveltejs/kit\"] ||\n      existsSync(join(cwd, \"svelte.config.js\"))\n    ) {\n      bundler = \"sveltekit\";\n    } else if (\n      deps.vite ||\n      existsSync(join(cwd, \"vite.config.ts\")) ||\n      existsSync(join(cwd, \"vite.config.js\"))\n    ) {\n      bundler = \"vite\";\n    } else if (deps.webpack || existsSync(join(cwd, \"webpack.config.js\"))) {\n      bundler = \"webpack\";\n    } else if (deps.rollup || existsSync(join(cwd, \"rollup.config.js\"))) {\n      bundler = \"rollup\";\n    }\n  }\n\n  const hasTypeScript =\n    existsSync(join(cwd, \"tsconfig.json\")) ||\n    existsSync(join(cwd, \"tsconfig.json\"));\n\n  return {\n    bundler,\n    hasTypeScript,\n    projectRoot: cwd,\n  };\n}\n\nexport function autoSetup(projectInfo: ProjectInfo): string[] {\n  const messages: string[] = [];\n  const { bundler, hasTypeScript, projectRoot } = projectInfo;\n\n  // Auto-configure TypeScript if present\n  if (hasTypeScript) {\n    const tsconfigPath = join(projectRoot, \"tsconfig.json\");\n    try {\n      const tsconfig = JSON.parse(readFileSync(tsconfigPath, \"utf-8\"));\n\n      if (!tsconfig.compilerOptions) {\n        tsconfig.compilerOptions = {};\n      }\n\n      const currentTypes = tsconfig.compilerOptions.types || [];\n      if (!currentTypes.includes(\"md-prompt\")) {\n        tsconfig.compilerOptions.types = [...currentTypes, \"md-prompt\"];\n        writeFileSync(tsconfigPath, JSON.stringify(tsconfig, null, 2));\n        messages.push(\"‚úÖ Added md-prompt to tsconfig.json types\");\n      }\n    } catch (error) {\n      messages.push(\"‚ö†Ô∏è  Could not automatically update tsconfig.json\");\n    }\n  }\n\n  // Generate config for detected bundler\n  switch (bundler) {\n    case \"vite\":\n      const viteConfigPath = existsSync(join(projectRoot, \"vite.config.ts\"))\n        ? join(projectRoot, \"vite.config.ts\")\n        : join(projectRoot, \"vite.config.js\");\n\n      if (!existsSync(viteConfigPath)) {\n        const viteConfig = `import { defineConfig } from 'vite';\nimport { mdPromptPlugin } from 'md-prompt';\n\nexport default defineConfig({\n  plugins: [mdPromptPlugin()],\n});`;\n        writeFileSync(viteConfigPath, viteConfig);\n        messages.push(\"‚úÖ Created vite.config.ts with md-prompt plugin\");\n      } else {\n        messages.push(\n          \"‚ö†Ô∏è  Please add mdPromptPlugin() to your vite.config.ts plugins array\"\n        );\n      }\n      break;\n\n    case \"next\":\n      const nextConfigPath = join(projectRoot, \"next.config.js\");\n      if (!existsSync(nextConfigPath)) {\n        const nextConfig = `import { mdPromptPlugin } from 'md-prompt/next';\n\nexport default {\n  webpack: (config) => {\n    config.plugins.push(mdPromptPlugin());\n    return config;\n  },\n};`;\n        writeFileSync(nextConfigPath, nextConfig);\n        messages.push(\"‚úÖ Created next.config.js with md-prompt plugin\");\n      } else {\n        messages.push(\n          \"‚ö†Ô∏è  Please add mdPromptPlugin() to your next.config.js webpack plugins\"\n        );\n      }\n      break;\n\n    case \"astro\":\n      messages.push(\n        \"‚ö†Ô∏è  Astro detected. Add to your astro.config.mjs:\",\n        \"\",\n        \"import { defineConfig } from 'astro/config';\",\n        \"import mdPrompt from 'md-prompt';\",\n        \"\",\n        \"export default defineConfig({\",\n        \"  vite: {\",\n        \"    plugins: [mdPrompt()]\",\n        \"  }\",\n        \"});\"\n      );\n      break;\n\n    case \"sveltekit\":\n      messages.push(\n        \"‚ö†Ô∏è  SvelteKit detected. Add to your vite.config.js:\",\n        \"\",\n        \"import { sveltekit } from '@sveltejs/kit/vite';\",\n        \"import mdPrompt from 'md-prompt';\",\n        \"\",\n        \"export default {\",\n        \"  plugins: [sveltekit(), mdPrompt()]\",\n        \"};\"\n      );\n      break;\n\n    case \"none\":\n      messages.push(\n        \"üí° No bundler detected. You can use the CLI: npx md-prompt build\"\n      );\n      break;\n\n    default:\n      messages.push(\n        `üí° ${bundler} detected. Add mdPrompt() to your bundler config.`\n      );\n  }\n\n  return messages;\n}\n\nexport function generateQuickStart(projectInfo: ProjectInfo): string {\n  const { bundler } = projectInfo;\n\n  const examples = {\n    vite: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your code:\nimport assistantPrompt from './prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });`,\n\n    next: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your component:\nimport assistantPrompt from '../prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });`,\n\n    webpack: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your code (with md-prompt/webpack loader):\nimport assistantPrompt from './prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });`,\n\n    rollup: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your code (with md-prompt/rollup plugin):\nimport assistantPrompt from './prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });`,\n\n    astro: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your .astro component:\n---\nimport assistantPrompt from '../prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });\n---\n<p>{prompt}</p>`,\n\n    sveltekit: `// 1. Create src/prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Use in your +page.svelte:\n<script>\nimport assistantPrompt from '$lib/prompts/assistant.md';\nconst prompt = assistantPrompt({ name: 'Claude' });\n</script>\n<p>{prompt}</p>`,\n\n    none: `// 1. Create prompts/assistant.md:\n# AI Assistant\nYou are a helpful assistant named {name}.\n\n// 2. Build with CLI:\nnpx md-prompt build prompts/**/*.md --outdir src/generated\n\n// 3. Import generated file:\nimport assistantPrompt from './generated/assistant.js';\nconst prompt = assistantPrompt({ name: 'Claude' });`,\n  };\n\n  return examples[bundler] || examples.none;\n}\n"],"mappings":"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","names":[]}